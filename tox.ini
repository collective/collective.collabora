[tox]

requires = virtualenv<20.22.0  # support python2.7

# we also have unlisted environments: black-enforce isort-apply
envlist =
    black-check,
    py{38,39,310,311,312,313}-lint,
    py{310,311,312,313}-Plone{61},
    py{39,310,311,312}-Plone{60},
    py{27,38}-Plone{52},
    coverage-report,

skip_missing_interpreters = True


[gh-actions]
python =
    '2.7': py27
    '3.8': py38
    '3.9': py39
    '3.10': py310
    '3.11': py311
    '3.12': py312
    '3.13': py313


[gh-actions:env]
PLONE_VERSION =
    Plone52: Plone52
    Plone60: Plone60
    Plone61: Plone61
PLATFORM =
    lint: lint

[testenv]
skip_install = true

extras =
    develop
    test

commands =
    {envbindir}/buildout -q -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} bootstrap
#    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} annotate
    {envbindir}/buildout -n -qq -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} install test
    coverage run {envbindir}/test -v1 --auto-color {posargs}
    coverage report -m

setenv =
    COVERAGE_FILE={toxinidir}/.coverage.{envname}
    PYTHONWARNINGS=default,ignore::DeprecationWarning
    Plone52: version_file=test_plone52.cfg
    Plone60: version_file=test_plone60.cfg
    Plone61: version_file=test_plone61.cfg

deps =
    Plone52: -rrequirements_plone52.txt
    Plone60: -rrequirements_plone60.txt
    Plone61: -rrequirements_plone61.txt
    !py27: coverage
    py27: -rrequirements_py27.txt


[testenv:coverage-report]
skip_install = true
usedevelop = True
basepython = python3.12
depends = py{27,38,39,310,311,312,313}-Plone{52,60,61}
deps =
    coverage
    Plone52: -cconstraints_plone52.txt
    Plone60: -cconstraints_plone60.txt
    Plone61: -cconstraints_plone61.txt

setenv =
    COVERAGE_FILE=.coverage

commands =
    coverage erase
    coverage combine
    coverage html
    coverage xml
    coverage report -m


[lint]
skip_install = true

deps =
    py{27,38}: -cconstraints_plone52.txt
    py{39}: -cconstraints_plone60.txt
    py{310,311,312,313}: -cconstraints_plone61.txt
    isort
    flake8
    # helper to generate HTML reports:
    # flake8-html>=0.4.3
    # Useful flake8 plugins that are Python and Plone specific:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-print
    #flake8-pytest
    flake8-todo
    mccabe
    # Potential flake8 plugins that should be used:  # TBD
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes
    #flake8-polyfill

commands =
    mkdir -p {toxinidir}/reports/flake8
    flake8 --ignore=E402 {toxinidir}/src {toxinidir}/setup.py
    !py27: isort --check-only {toxinidir}/src {toxinidir}/setup.py

allowlist_externals =
    mkdir
    isort

[testenv:isort-apply]
basepython = python3.12
skip_install = true
deps =
    -cconstraints_plone61.txt
    isort
commands =
    isort {toxinidir}/src {toxinidir}/setup.py


[testenv:black-check]
basepython = python3.12
skip_install = True
deps =
    -cconstraints_plone61.txt
    black
commands =
    black --check --diff -v src setup.py


[testenv:black-enforce]
basepython = python3.12
skip_install = True
deps =
    -cconstraints_plone61.txt
    black
commands =
    black -v src setup.py


[testenv:py27-lint]
basepython = python2.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[testenv:py38-lint]
basepython = python3.8
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[testenv:py39-lint]
basepython = python3.9
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[testenv:py310-lint]
basepython = python3.10
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[testenv:py311-lint]
basepython = python3.11
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[testenv:py312-lint]
basepython = python3.12
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[testenv:py313-lint]
basepython = python3.13
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}
